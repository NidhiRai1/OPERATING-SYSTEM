DUE TO THREAD LOCK , MUTUAL EXCLUSION THEIR IS ABUG ARISES CALLED DEADLOCK

WE CAN SAY THAT IN SYYSTEM THEIR AREA LOTS OF RESOURCE , AND TO USE THEM PROCESSES AND THREADS ARE COMPETTING IN MUTUALLY EXCLUSIVE WAY

DEADLOCK - 2 OR MORE PROCESS ARE WAITING FOR RESOURCE AVAILABLILITY WHICH WILL NEVER AVAILABLE i.e BUSY WITH SOMEOTHER PROCESS

//HOW PROCESS/THREAD UTILIZE A RESOURCE 
1.REQUEST - FOR RESOURCE 
2. USE - CHECK THE AVAILIBLE - (LOACK AVAILABLE OR NOT ) 
3.RELEASE WHEN THAT USE BY THAT THREAD BY MAKING IT UNLOCK FOR OTHER THREAD/PROCESS

//CONDITION FOR DEADLOCK(SIMULTENIOUSLLY TRUE ALL THE CONDITION)
1.MUTUAL EXCLUSION - (EK BAR ME EK HI TREAD /PROCESS USE KREGI KOI V RESOURCE)
2.HOLD & WAIT - (
3.NO PREUMTION - (UNTILL TREAD / PROCESS COMPLETE THEIR EXECUTION NO OTHER THREAD CAN'T ACCESS THAT RESOURCE)
4.CIRCULAR WAIT - WAITING IS IN KIND OF CIRCULAR FASHION 

//DEADLOCK DETECTION :- 
1,SINGLE INSTANCE OF EACH RESOURSE :- WAIT FOR GRAPH SE RESOURSE AND PROCESS KI EDGES HTAA DETI H P1 WAITING FOR THAT RESOURSE THAT  IS WAITING FO RP2 AND VISE VERSA 
IF CYCLE IS FORMED THEN THEN DEADLOCK
2.MULTIPLE INSTANCE :- WITH TEH HELP OF BANKER ALLOGRITHUM IF WE FIND SAFE SEQUENCE THEN NO DL ELSE THEIR IS A DL

//DEADLOCK RECOVERY :- 
1.PROCESS TERMINATION - ABOT ALL THE DL OR ABOT ONE PROCESS(LESS PRIVORITY ) AT A TIME UNTLI THEN DL CYCLE GOT RLIMINATED
2.RESOURCE PREMPTION :- WE PREMPT SOME RESOURSES FROM THE PROCESS AND GIVE IT OT THE OYJER PROCESS TO AVOID DL


//RESOURCE ALLOCATION GRAPH - IT'S LIKE A GRAPH 
VERTEX - PROCESS AND RESOURCE VERTEX
EDGES - ASSIGNE AND REQUEST EDGE  USE FOR GRAPHICAL REPRESANTATION 


//ISOLATION AND MEMEORY PROTECTION:-OS VIRTUAL MEMORY KO ALLOCATE KRTA H PHYSICAL ADDRESS SPACE(IN MAIN MEMORY) ME 
      FOR ISOLATION OS HAS TO STORE BASE AND OFFSET WITH THE HELP OF THESE OS GETS THAT IN THE PHYSICAL 
SPACE THE ALLOCATED ADDRESS FOR PROCESS IS IN RANGE OF BASE , MAX BOUND ADDRESS ASIGN 







